{"version":3,"sources":["components/HomeGallery/HomeGallery.js","views/FilmsView.js","Service/Service-api.js","Service/infinite-scroll-service.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/HomeGallery/HomeGallery.module.css"],"names":["HomeGallery","location","useLocation","url","useRouteMatch","useState","trendingMovieArr","setTrendingMovieArr","page","setPage","status","setStatus","useEffect","a","api","newRequest","data","results","console","log","fetchData","length","prevState","nextFetch","infiniteScroll","Loader","className","id","s","MovieGallery","map","item","poster_path","title","to","pathname","state","from","MovieGalleryItem","src","alt","MovieGalleryItemImage","MovieTitle","HomeView","BASE_URL","API_KEY","getTrendingMovies","axios","get","getMovie","searchQuery","getSingleFilm","filmId","getCast","getReviews","arr","timeOut","threshold","callFoo","lastId","setTimeout","lastTarget","document","getElementById","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","target","observe","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"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","file":"static/js/5.c4d11327.chunk.js","sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport * as api from \"../../Service/Service-api\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport s from \"./HomeGallery.module.css\";\r\nimport infiniteScroll from '../../Service/infinite-scroll-service';\r\n\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w342';\r\n\r\nexport default function HomeGallery() {\r\n    const location = useLocation();\r\n    const { url } = useRouteMatch();\r\n    const [trendingMovieArr, setTrendingMovieArr] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    // const [totalMovie, setTotalMovie] = useState(0);\r\n    const [status, setStatus] = useState('pending');\r\n    \r\n\r\n    // подгрузкa только первой страницы\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setStatus('pending');\r\n            let newRequest;\r\n            try {\r\n                newRequest = await api.getTrendingMovies(1);\r\n                setTrendingMovieArr([...newRequest.data.results]);\r\n                // setTotalMovie(newRequest.data.total_results);\r\n                setStatus(() => {\r\n                    return (\r\n                        newRequest.data.results === 0 ?\r\n                            'rejected' :\r\n                            'resolved'\r\n                    )\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed');\r\n                return setStatus('failed')\r\n            };\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n        // подгрузкa последующих страниц при скроле\r\n\r\n    useEffect(() => {\r\n        if (page === 1) return;\r\n        async function nextFetch() {\r\n            let newRequest;\r\n            try {\r\n                newRequest = await api.getTrendingMovies(page);\r\n                if (newRequest.data.results.length === 0) return;\r\n                setTrendingMovieArr(prevState => [...prevState, ...newRequest.data.results]);\r\n                // setTotalMovie(newRequest.data.total_results);\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed');\r\n                return setStatus('failed')\r\n            };       \r\n        };\r\n        nextFetch();\r\n    }, [page]);\r\n\r\n    // бесконечный скролл\r\n\r\n    useEffect(() => {\r\n        infiniteScroll(trendingMovieArr, 600, 0.2, () => setPage(prevState => prevState + 1));\r\n    }, [trendingMovieArr]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {(status === 'pending') && <Loader />}\r\n\r\n            {(status === 'rejected') && <h2 className=\"galleryTitle\">По запросу ничего не найдено</h2>}\r\n\r\n            {(status === 'failed') && <h2 className=\"galleryTitle\">Error: request failed. Нет соединения с интернетом или сервером</h2>}\r\n            \r\n            {(status === 'resolved') && (\r\n                <>\r\n                    {/* <h2 className=\"galleryTitle\">{totalMovie} самых популярных фильмов дня:</h2> */}\r\n            \r\n                    <ul id=\"gallery\" className={s.MovieGallery}>\r\n                        {trendingMovieArr.map(item => {\r\n                            const { id, poster_path, title } = item;\r\n                            return (\r\n                                <li key={id} >\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `${url}/${id}`,\r\n                                            state: { from: location },\r\n                                        }}  \r\n                                        className={s.MovieGalleryItem}>\r\n                                        <img src={`${BASE_IMG_URL}${poster_path}`} id={id} alt={title} className={s.MovieGalleryItemImage} />\r\n                                        <h4 className={s.MovieTitle}>{title}</h4>\r\n                                    </Link>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </> \r\n            )}\r\n{/* \r\n            {((page * 20 >= totalMovie) && (status === 'resolved')) && <h2 className=\"galleryTitle\">Запрос успешно выполнен</h2>} */}\r\n            \r\n        </>\r\n        \r\n        \r\n    )\r\n};","import HomeGallery from '../components/HomeGallery/HomeGallery'\n\nexport default function HomeView() {\n    return (\n        <>\n            <HomeGallery/>\n        </>\n    )\n};","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"367b0facb69c6afab44aa6f928a1cec5\";\n\nexport const getTrendingMovies = (page) =>\n  axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\nexport const getMovie = (searchQuery, page) =>\n  axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}&include_adult=false`);\n\nexport const getSingleFilm = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}?api_key=${API_KEY}`);\n\nexport const getCast = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`);\n\nexport const getReviews = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&page=1`);\n","function infiniteScroll(arr, timeOut, threshold, callFoo) {\r\n    if (arr.length === 0) return;\r\n        let lastId = (arr[arr.length - 1].id);   //запоминаем id крайнего на даный момент элемента гллереи\r\n        setTimeout(() => { \r\n            const lastTarget = document.getElementById(lastId); //получаем этот элемент и делаем его целью наблюдения для IntersectionObserver\r\n            let observer = new IntersectionObserver((entries, observer) => {\r\n                entries.forEach((entry) => {\r\n                    if (entry.isIntersecting) {\r\n                        callFoo(); //запуск подгрузки следующих элементов\r\n                        observer.unobserve(entry.target);  //остановка наблюдателя видимой частью окна для объявленой цели\r\n                    };\r\n                });\r\n            }, {threshold: threshold}); //подгрузка следующих элементов сработает при появлении threshold% цели в области видимости окна\r\n\r\n            observer.observe(lastTarget);  //запуск наблюдателя за видимой частью окна \r\n        }, timeOut);\r\n}\r\n\r\nexport default infiniteScroll;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGallery\":\"HomeGallery_MovieGallery__1JnVM\",\"MovieGalleryItem\":\"HomeGallery_MovieGalleryItem__3ShpH\",\"MovieTitle\":\"HomeGallery_MovieTitle__3Ww1d\",\"MovieGalleryItemImage\":\"HomeGallery_MovieGalleryItemImage__2yUmr\"};"],"sourceRoot":""}