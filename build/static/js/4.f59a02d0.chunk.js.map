{"version":3,"sources":["components/Cast/Cast.js","components/Reviews/Reviews.js","components/SingleMovie/SingleMovie.js","views/FilmDetails.js","Service/Service-api.js","components/SingleMovie/SingleMovie.module.css","components/Cast/Cast.module.css","components/Reviews/Reviews.module.css"],"names":["Cast","movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","a","api","newRequest","data","length","console","log","fetchData","Loader","className","s","castGallery","map","item","profile_path","id","name","castGalleryItem","src","alt","CastGalleryItemImage","CastTitle","Reviews","reviews","setReviews","results","ReviewsList","author","content","created_at","ReviewsListItem","ReviewsAuthorTitle","ReviewsAuthor","ReviewsCreated","slice","ReviewsContent","prevLocation","SingleMovie","history","useHistory","location","useLocation","url","useRouteMatch","film","setFilm","state","from","type","onClick","pathname","search","push","GoBackBtn","SingleFilm","imageFrame","poster_path","title","imgFilm","filmData","filmTitle","filmText","filmTextValue","release_date","overview","genres","items","join","toLowerCase","vote_average","to","FilmLink","path","FilmView","BASE_URL","API_KEY","getTrendingMovies","page","axios","get","getMovie","searchQuery","getSingleFilm","filmId","getCast","getReviews","module","exports"],"mappings":"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","file":"static/js/4.f59a02d0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport * as api from \"../../Service/Service-api\";\r\nimport s from './Cast.module.css';\r\n// import NoImage154 from '../../images/NoImage154.PNG';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w154';\r\n\r\nexport default function Cast() {\r\n    const { movieId } = useParams();\r\n    const [cast, setCast] = useState(null);\r\n    const [status, setStatus] = useState('pending');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setStatus('pending');\r\n            let newRequest;\r\n            try {\r\n                newRequest = await api.getCast(movieId);\r\n                setCast(newRequest.data.cast);\r\n                setStatus(() => {\r\n                    return (\r\n                        newRequest.data.cast.length === 0 ?\r\n                            'rejected' :\r\n                            'resolved'\r\n                    )\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed1');\r\n                return setStatus('failed');\r\n            };\r\n        };\r\n        fetchData();\r\n    }, [movieId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {(status === 'pending') && <Loader />}\r\n\r\n            {(status === 'rejected') && <h2 className=\"galleryTitle\">По запросу ничего не найдено</h2>}\r\n\r\n            {(status === 'failed') && <h2 className=\"galleryTitle\">Error: request failed. Нет соединения с интернетом или сервером</h2>}\r\n            \r\n            {(status === 'resolved') && (\r\n                <>\r\n                    {cast && (\r\n                        <ul className={s.castGallery}>\r\n                            {cast.map(item => {\r\n                                const {profile_path, id, name } = item;\r\n                                return (\r\n                                    <li key={id} className={s.castGalleryItem}>\r\n                                        {profile_path && <img src={`${BASE_IMG_URL}${profile_path}`} alt={name} className={s.CastGalleryItemImage}/>}\r\n                                        {/* {!profile_path && <img src={NoImage154} alt=\"NoImage\" />} */}\r\n                                        <h5 className={s.CastTitle}>{name}</h5>\r\n                                    </li>\r\n                            )})}\r\n                        </ul>\r\n                    )}\r\n                </>\r\n            )}\r\n            \r\n        </>   \r\n    )\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport * as api from \"../../Service/Service-api\";\r\nimport s from './Reviews.module.css';\r\n// import NoImage154 from '../../images/NoImage154.PNG';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n// const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w154';\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState(null);\r\n    const [status, setStatus] = useState('pending');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setStatus('pending');\r\n            let newRequest;\r\n            try {\r\n                newRequest = await api.getReviews(movieId);\r\n                setReviews(newRequest.data.results);\r\n                setStatus(() => {\r\n                    return (\r\n                        newRequest.data.results.length === 0 ?\r\n                            'rejected' :\r\n                            'resolved'\r\n                    )\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed1');\r\n                return setStatus('failed');\r\n            };\r\n        };\r\n        fetchData();\r\n    }, [movieId]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            {(status === 'pending') && <Loader />}\r\n\r\n            {(status === 'rejected') && <h2 className=\"galleryTitle\">По запросу ничего не найдено</h2>}\r\n\r\n            {(status === 'failed') && <h2 className=\"galleryTitle\">Error: request failed. Нет соединения с интернетом или сервером</h2>}\r\n            \r\n            {(status === 'resolved') && (\r\n                <>\r\n                    {reviews && (\r\n                        <ul className={s.ReviewsList}>\r\n                            {reviews.map(item => {\r\n                                const {author, id, content, created_at } = item;\r\n                                return (\r\n                                    <li key={id} className={s.ReviewsListItem}>\r\n                                        <span className={s.ReviewsAuthorTitle}>Author: </span>\r\n                                        <span className={s.ReviewsAuthor}>{author}</span>\r\n                                        <p className={s.ReviewsCreated}>Created: { created_at.slice(0, 10)}</p>\r\n                                        <p className={s.ReviewsContent}>{content}</p>\r\n                                    </li>\r\n                            )})}\r\n                        </ul>\r\n                    )}\r\n                </>\r\n            )}\r\n            \r\n        </>   \r\n    )\r\n};","import { NavLink, useParams, useRouteMatch, Route } from \"react-router-dom\";\r\nimport { useHistory, useLocation} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport s from './SingleMovie.module.css';\r\nimport * as api from \"../../Service/Service-api\";\r\nimport Cast from '../../components/Cast/Cast';\r\nimport Reviews from '../../components/Reviews/Reviews';\r\nimport Loader from '../Loader/Loader';\r\nimport { IoArrowBackSharp } from \"react-icons/io5\";\r\n\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w342';\r\nlet prevLocation = null;\r\n\r\nexport default function SingleMovie() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { url } = useRouteMatch();\r\n    const { movieId } = useParams();\r\n    const [film, setFilm] = useState(null);\r\n    const [status, setStatus] = useState('pending');\r\n\r\n    \r\n    useEffect(() => {\r\n        if (!location.state) return;\r\n        prevLocation = location.state.from;\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        async function fetchData() {\r\n        setStatus('pending');\r\n        let newRequest;\r\n            try {\r\n                newRequest = await api.getSingleFilm(movieId);\r\n                setFilm(newRequest);\r\n                setStatus(() => {\r\n                    return (\r\n                        newRequest.data.length === 0 ?\r\n                            'rejected' :\r\n                            'resolved'\r\n                    )\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed');\r\n                return setStatus('failed');\r\n        };\r\n        };\r\n\r\n        fetchData();\r\n        // const {backdrop_path, title, release_date, genres, overview, vote_average, vote_count} = film.data\t\r\n    }, [movieId]);\r\n\r\n    const handleGoBack = () => {\r\n        const { pathname, search } = prevLocation;\r\n        history.push({\r\n            pathname: pathname,\r\n            search: search,\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {(status === 'pending') && <Loader />}\r\n\r\n            {(status === 'rejected') && <h2 className=\"galleryTitle\">По запросу ничего не найдено</h2>}\r\n\r\n            {(status === 'failed') && <h2 className=\"galleryTitle\">Error: request failed. Нет соединения с интернетом или сервером</h2>}\r\n            \r\n            {(status === 'resolved') && (\r\n                <>\r\n                    <button type=\"button\" onClick={handleGoBack} className={s.GoBackBtn}>\r\n                        <IoArrowBackSharp />\r\n                        <span>GO BACK</span>    \r\n                    </button>\r\n                    {(film) && (\r\n                        <div className={s.SingleFilm}>\r\n                            <div className={s.imageFrame}>\r\n                                <img src={`${BASE_IMG_URL}${film.data.poster_path}`} alt={film.data.title} className={s.imgFilm} />\r\n                            </div>\r\n                            <div className={s.filmData}>\r\n                                <h1 className={s.filmTitle}>{film.data.title}</h1>\r\n                                <h4 className={s.filmText}>Released:</h4>\r\n                                <p className={s.filmTextValue}>{film.data.release_date}</p>\r\n                                <h4 className={s.filmText}>Overview:</h4>\r\n                                <p className={s.filmTextValue}>{film.data.overview}</p>\r\n                                <h4 className={s.filmText}>Genres:</h4>\r\n                                <p className={s.filmTextValue}>{film.data.genres.map(items => items.name).join(', ').toLowerCase()}</p>\r\n                                <h4 className={s.filmText}>Vote average:</h4>\r\n                                <p className={s.filmTextValue}>{film.data.vote_average}</p>\r\n                                <h4 className={s.filmText}>Additional information:</h4>\r\n                                <NavLink to={`${url}/cast/${movieId}`} className={s.FilmLink}>cast</NavLink>\r\n                                <NavLink to={`${url}/reviews/${movieId}`} className={s.FilmLink}>reviews</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <Route path={`${url}/cast/:movieId`}>\r\n                        <Cast />\r\n                    </Route>\r\n                    <Route path={`${url}/reviews/:movieId`}>\r\n                        <Reviews/>\r\n                    </Route>\r\n                </>\r\n            )}\r\n        </> \r\n    )\r\n};","\r\nimport SingleMovie from '../components/SingleMovie/SingleMovie'\r\n\r\nexport default function FilmView() {\r\n    return (\r\n        <>\r\n            <SingleMovie/>  \r\n        </> \r\n    )\r\n}","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"367b0facb69c6afab44aa6f928a1cec5\";\n\nexport const getTrendingMovies = (page) =>\n  axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\nexport const getMovie = (searchQuery, page) =>\n  axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}&include_adult=false`);\n\nexport const getSingleFilm = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}?api_key=${API_KEY}`);\n\nexport const getCast = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`);\n\nexport const getReviews = (filmId) =>\n  axios.get(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&page=1`);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleFilm\":\"SingleMovie_SingleFilm__3Vx7v\",\"imageFrame\":\"SingleMovie_imageFrame__2z1dL\",\"imgFilm\":\"SingleMovie_imgFilm__1SQtM\",\"filmData\":\"SingleMovie_filmData__1y31M\",\"filmTitle\":\"SingleMovie_filmTitle__35gHA\",\"filmText\":\"SingleMovie_filmText__1EN0b\",\"filmTextValue\":\"SingleMovie_filmTextValue__3bbxR\",\"FilmLink\":\"SingleMovie_FilmLink__18Oz6\",\"GoBackBtn\":\"SingleMovie_GoBackBtn__37mGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castGallery\":\"Cast_castGallery__3wjay\",\"castGalleryItem\":\"Cast_castGalleryItem__279Aw\",\"CastGalleryItemImage\":\"Cast_CastGalleryItemImage__3hR84\",\"CastTitle\":\"Cast_CastTitle__2YNvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReviewsList\":\"Reviews_ReviewsList__3sS2R\",\"ReviewsListItem\":\"Reviews_ReviewsListItem__3JdP7\",\"ReviewsAuthorTitle\":\"Reviews_ReviewsAuthorTitle__2dJSe\",\"ReviewsAuthor\":\"Reviews_ReviewsAuthor__3mXJC\",\"ReviewsContent\":\"Reviews_ReviewsContent__3KlRk\",\"ReviewsCreated\":\"Reviews_ReviewsCreated__1mDEr\"};"],"sourceRoot":""}